import "./chunk-MBNXFJYM.js";
import {
  get_store_value
} from "./chunk-ZC4VF5KK.js";
import "./chunk-AIWSD4YG.js";
import "./chunk-7U33LM2Z.js";

// node_modules/.pnpm/@vercel+speed-insights@1.0.12_@sveltejs+kit@2.5.0_@sveltejs+vite-plugin-svelte@3.0.2_svelte@4_4z5xadxsbczrmntkcq6xy3ft54/node_modules/@vercel/speed-insights/dist/sveltekit/index.mjs
import { page } from "$app/stores";
import { browser } from "$app/environment";
var name = "@vercel/speed-insights";
var version = "1.0.12";
var initQueue = () => {
  if (window.si)
    return;
  window.si = function a(...params) {
    (window.siq = window.siq || []).push(params);
  };
};
function isBrowser() {
  return typeof window !== "undefined";
}
function detectEnvironment() {
  try {
    const env = "development";
    if (env === "development" || env === "test") {
      return "development";
    }
  } catch (e) {
  }
  return "production";
}
function isDevelopment() {
  return detectEnvironment() === "development";
}
var SCRIPT_URL = `https://va.vercel-scripts.com/v1/speed-insights`;
var PROD_SCRIPT_URL = `${SCRIPT_URL}/script.js`;
var DEV_SCRIPT_URL = `${SCRIPT_URL}/script.debug.js`;
var PROXY_SCRIPT_URL = `/_vercel/speed-insights/script.js`;
function injectSpeedInsights(props = {}) {
  var _a;
  if (!isBrowser() || props.route === null)
    return null;
  initQueue();
  const isSelfHosted = Boolean(props.dsn);
  const productionScript = isSelfHosted ? PROD_SCRIPT_URL : PROXY_SCRIPT_URL;
  const src = props.scriptSrc || (isDevelopment() ? DEV_SCRIPT_URL : productionScript);
  if (document.head.querySelector(`script[src*="${src}"]`))
    return null;
  if (props.beforeSend) {
    (_a = window.si) == null ? void 0 : _a.call(window, "beforeSend", props.beforeSend);
  }
  const script = document.createElement("script");
  script.src = src;
  script.defer = true;
  script.dataset.sdkn = name + (props.framework ? `/${props.framework}` : "");
  script.dataset.sdkv = version;
  if (props.sampleRate) {
    script.dataset.sampleRate = props.sampleRate.toString();
  }
  if (props.route) {
    script.dataset.route = props.route;
  }
  if (props.endpoint) {
    script.dataset.endpoint = props.endpoint;
  }
  if (props.dsn) {
    script.dataset.dsn = props.dsn;
  }
  if (isDevelopment() && props.debug === false) {
    script.dataset.debug = "false";
  }
  script.onerror = () => {
    console.log(
      `[Vercel Speed Insights] Failed to load script from ${src}. Please check if any content blockers are enabled and try again.`
    );
  };
  document.head.appendChild(script);
  return {
    setRoute: (route) => {
      script.dataset.route = route ?? void 0;
    }
  };
}
function injectSpeedInsights2(props = {}) {
  var _a;
  if (browser) {
    const speedInsights = injectSpeedInsights({
      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition -- route could be undefined in layout.js file
      route: (_a = get_store_value(page).route) == null ? void 0 : _a.id,
      ...props,
      framework: "sveltekit"
    });
    if (speedInsights) {
      page.subscribe((value) => {
        var _a2;
        if ((_a2 = value.route) == null ? void 0 : _a2.id) {
          speedInsights.setRoute(value.route.id);
        }
      });
    }
  }
}
export {
  injectSpeedInsights2 as injectSpeedInsights
};
//# sourceMappingURL=@vercel_speed-insights_sveltekit.js.map
