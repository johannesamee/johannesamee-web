import{s as Y,a as P,e as V,n as G}from"./scheduler.CVTL0etF.js";import{S as W,i as X,f as Z,h as tt,m as et,t as nt,j as ot,k as st,e as a,s as u,c as i,g as h,a as m,o as M,b as o,d as s}from"./index.cpxQQXN5.js";import{g as rt,a as F}from"./spread.CgU5AtxT.js";import{M as lt}from"./mdsvex.B4zrBQhT.js";function at(k){let e,c="Svelte + Vercel Project",f,d,r="#svelte",l,p,B="Libraries etc",T,x,O='<thead><tr><th>Name</th> <th>Description</th> <th>URL</th></tr></thead> <tbody><tr><td>Lucide Icons</td> <td>Icons</td> <td><a href="https://lucide.dev/" rel="nofollow">Lucide Icons</a></td></tr> <tr><td>mdsvex</td> <td>Svelte in markdown</td> <td><a href="https://mdsvex.pngwn.io/" rel="nofollow">mdsvex</a></td></tr> <tr><td>Open Props</td> <td>Supercharged CSS variables.</td> <td><a href="https://open-props.style/" rel="nofollow">open-props</a></td></tr> <tr><td>remark</td> <td>Markdown processor powered by plugins</td> <td><a href="https://github.com/remarkjs/remark/tree/main?tab=readme-ov-file" rel="nofollow">remarkjs/remark</a><br/><a href="https://github.com/remarkjs/remark/blob/main/doc/plugins.md" rel="nofollow">remark plugins</a></td></tr> <tr><td>rehype</td> <td>HTML processor powered by plugins</td> <td><a href="https://github.com/rehypejs/rehype/tree/main" rel="nofollow">rehypejs/rehype</a><br/><a href="https://github.com/rehypejs/rehype/blob/main/doc/plugins.md" rel="nofollow">rehype plugins</a></td></tr></tbody>',L,b,z="Melt UI[^1] and Bits UI[^2], was too much work to deal with when I just wanted to set up something basic and start experimenting with it.",H,v,E="Further Reading",j,w,K="Markdown / HTML processing",S,g,N=`<p><code>mdsvex</code> first parses the Markdown into a Markdown AST (MDAST) where <strong><code>remark</code></strong> plugins run and then it converts it into a HTML AST (HAST) where <strong><code>rehype</code></strong> plugins run.
You don’t have to understand ASTs but I recommend reading <strong>~<a href="https://css-tricks.com/how-to-modify-nodes-in-an-abstract-syntax-tree/" rel="nofollow">How to Modify Nodes in an Abstract Syntax Tree</a>~</strong> if you want to learn the fundamentals and write your own plugin which is just a JavaScript function.</p>`,I,_,R="SvelteKit Transitions",U,y,D=`<p>Adding some simple page transitions is going to give your site an air of whimsy and sophistication.
I have an entire post on <strong>~<a href="https://joyofcode.xyz/sveltekit-page-transitions" rel="nofollow">SvelteKit Page Transitions</a>~</strong> but the gist is that we need to know when the url changed to destroy and recreate the page which is going to play the transition.</p>`,$,A,q,C,Q=`[^1]: <a href="https://melt-ui.com/" rel="nofollow">Melt UI</a> UI Library
[^2]: <a href="https://www.bits-ui.com/docs/introduction" rel="nofollow">Bits UI</a> UI Library, based on Melt UI`;return{c(){e=a("h1"),e.textContent=c,f=u(),d=a("p"),d.textContent=r,l=u(),p=a("h2"),p.textContent=B,T=u(),x=a("table"),x.innerHTML=O,L=u(),b=a("p"),b.textContent=z,H=u(),v=a("h2"),v.textContent=E,j=u(),w=a("h3"),w.textContent=K,S=u(),g=a("blockquote"),g.innerHTML=N,I=u(),_=a("h3"),_.textContent=R,U=u(),y=a("blockquote"),y.innerHTML=D,$=u(),A=a("hr"),q=u(),C=a("p"),C.innerHTML=Q,this.h()},l(t){e=i(t,"H1",{id:!0,"data-svelte-h":!0}),h(e)!=="svelte-16k2g9w"&&(e.textContent=c),f=m(t),d=i(t,"P",{"data-svelte-h":!0}),h(d)!=="svelte-lztqxa"&&(d.textContent=r),l=m(t),p=i(t,"H2",{id:!0,"data-svelte-h":!0}),h(p)!=="svelte-1dirgfv"&&(p.textContent=B),T=m(t),x=i(t,"TABLE",{"data-svelte-h":!0}),h(x)!=="svelte-177duqy"&&(x.innerHTML=O),L=m(t),b=i(t,"P",{"data-svelte-h":!0}),h(b)!=="svelte-1r7v5hj"&&(b.textContent=z),H=m(t),v=i(t,"H2",{id:!0,"data-svelte-h":!0}),h(v)!=="svelte-1ozzvox"&&(v.textContent=E),j=m(t),w=i(t,"H3",{id:!0,"data-svelte-h":!0}),h(w)!=="svelte-iv7cbo"&&(w.textContent=K),S=m(t),g=i(t,"BLOCKQUOTE",{"data-svelte-h":!0}),h(g)!=="svelte-155jawr"&&(g.innerHTML=N),I=m(t),_=i(t,"H3",{id:!0,"data-svelte-h":!0}),h(_)!=="svelte-jwdmfp"&&(_.textContent=R),U=m(t),y=i(t,"BLOCKQUOTE",{"data-svelte-h":!0}),h(y)!=="svelte-162vu04"&&(y.innerHTML=D),$=m(t),A=i(t,"HR",{}),q=m(t),C=i(t,"P",{"data-svelte-h":!0}),h(C)!=="svelte-g10i58"&&(C.innerHTML=Q),this.h()},h(){M(e,"id","svelte--vercel-project"),M(p,"id","libraries-etc"),M(v,"id","further-reading"),M(w,"id","markdown--html-processing"),M(_,"id","sveltekit-transitions")},m(t,n){o(t,e,n),o(t,f,n),o(t,d,n),o(t,l,n),o(t,p,n),o(t,T,n),o(t,x,n),o(t,L,n),o(t,b,n),o(t,H,n),o(t,v,n),o(t,j,n),o(t,w,n),o(t,S,n),o(t,g,n),o(t,I,n),o(t,_,n),o(t,U,n),o(t,y,n),o(t,$,n),o(t,A,n),o(t,q,n),o(t,C,n)},p:G,d(t){t&&(s(e),s(f),s(d),s(l),s(p),s(T),s(x),s(L),s(b),s(H),s(v),s(j),s(w),s(S),s(g),s(I),s(_),s(U),s(y),s($),s(A),s(q),s(C))}}}function it(k){let e,c;const f=[k[0],J];let d={$$slots:{default:[at]},$$scope:{ctx:k}};for(let r=0;r<f.length;r+=1)d=P(d,f[r]);return e=new lt({props:d}),{c(){Z(e.$$.fragment)},l(r){tt(e.$$.fragment,r)},m(r,l){et(e,r,l),c=!0},p(r,[l]){const p=l&1?rt(f,[l&1&&F(r[0]),l&0&&F(J)]):{};l&2&&(p.$$scope={dirty:l,ctx:r}),e.$set(p)},i(r){c||(nt(e.$$.fragment,r),c=!0)},o(r){ot(e.$$.fragment,r),c=!1},d(r){st(e,r)}}}const J={title:"Svelte+Vercel Project",description:"Export from a Bear Note.",date:"2023-6-26",categories:["sveltekit","svelte"],published:!0};function dt(k,e,c){return k.$$set=f=>{c(0,e=P(P({},e),V(f)))},e=V(e),[e]}class ft extends W{constructor(e){super(),X(this,e,dt,it,Y,{})}}export{ft as default,J as metadata};
