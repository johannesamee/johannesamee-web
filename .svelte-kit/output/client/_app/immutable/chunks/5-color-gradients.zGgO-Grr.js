import{s as P,a as D,e as w,n as S}from"./scheduler.uuNsLXlX.js";import{S as j,i as q,f as G,h as I,m as N,t as z,j as J,k as K,e as m,s as C,H as O,c as _,g as A,n as v,o as Q,a as M,b as o,d as p}from"./index.BKg8bbRF.js";import{g as R,a as $}from"./spread.CgU5AtxT.js";import{M as U}from"./mdsvex.BX0zoivI.js";function V(u){let s,c="<del>Gradient Images from open-props</del>",i,n,t="<code>open-props</code> is no longer used",l,r,H=`Line 1 <br/>
Line 2`,x,y,b=`Line 3
Line 4`,E,f,L="CSS used",F,g,B=`<pre class="shiki rose-pine" style="background-color:#191724;color:#e0def4" tabindex="0"><code><span class="line"><span style="color:#908CAA;font-style:italic">.</span><span style="color:#C4A7E7;font-style:italic">gradient</span><span style="color:#908CAA"> &#123;</span></span>
<span class="line"><span style="color:#9CCFD8">		background-image</span><span style="color:#908CAA">:</span><span style="color:#EB6F92;font-style:italic"> var</span><span style="color:#908CAA">(</span><span style="color:#E0DEF4;font-style:italic">--gradient-3</span><span style="color:#908CAA">),</span><span style="color:#EB6F92;font-style:italic"> var</span><span style="color:#908CAA">(</span><span style="color:#E0DEF4;font-style:italic">--noise-3</span><span style="color:#908CAA">);</span></span>
<span class="line"><span style="color:#9CCFD8">		filter</span><span style="color:#908CAA">:</span><span style="color:#EB6F92;font-style:italic"> var</span><span style="color:#908CAA">(</span><span style="color:#E0DEF4;font-style:italic">--noise-filter-3</span><span style="color:#908CAA">);</span></span>
<span class="line"><span style="color:#9CCFD8">		background-size</span><span style="color:#908CAA">:</span><span style="color:#F6C177"> cover</span><span style="color:#908CAA">;</span></span>
<span class="line"><span style="color:#9CCFD8">		filter</span><span style="color:#908CAA">:</span><span style="color:#EB6F92;font-style:italic"> var</span><span style="color:#908CAA">(</span><span style="color:#E0DEF4;font-style:italic">--noise-filter-1</span><span style="color:#908CAA">);</span></span>
<span class="line"><span style="color:#9CCFD8">		border-radius</span><span style="color:#908CAA">:</span><span style="color:#EB6F92;font-style:italic"> var</span><span style="color:#908CAA">(</span><span style="color:#E0DEF4;font-style:italic">--radius-2</span><span style="color:#908CAA">);</span></span>
<span class="line"><span style="color:#9CCFD8">		aspect-ratio</span><span style="color:#908CAA">:</span><span style="color:#EB6F92;font-style:italic"> var</span><span style="color:#908CAA">(</span><span style="color:#E0DEF4;font-style:italic">--ratio-landscape</span><span style="color:#908CAA">);</span></span>
<span class="line"><span style="color:#908CAA">&#125;</span></span></code></pre>`,h,d,T="<del>These styles created this beautiful image. Now I just have to figure out how to get this as an image somehow so it can be used as preview images for links with <code>og:image</code> for example.</del>";return{c(){s=m("h3"),s.innerHTML=c,i=C(),n=m("h3"),n.innerHTML=t,l=C(),r=m("p"),r.innerHTML=H,x=C(),y=m("p"),y.textContent=b,E=C(),f=m("p"),f.textContent=L,F=C(),g=new O(!1),h=C(),d=m("p"),d.innerHTML=T,this.h()},l(e){s=_(e,"H3",{id:!0,"data-svelte-h":!0}),A(s)!=="svelte-q3iws"&&(s.innerHTML=c),i=v(e),n=_(e,"H3",{id:!0,"data-svelte-h":!0}),A(n)!=="svelte-162pa3v"&&(n.innerHTML=t),l=v(e),r=_(e,"P",{"data-svelte-h":!0}),A(r)!=="svelte-fwbkyy"&&(r.innerHTML=H),x=v(e),y=_(e,"P",{"data-svelte-h":!0}),A(y)!=="svelte-1q2heft"&&(y.textContent=b),E=v(e),f=_(e,"P",{"data-svelte-h":!0}),A(f)!=="svelte-1ds7gpg"&&(f.textContent=L),F=v(e),g=Q(e,!1),h=v(e),d=_(e,"P",{"data-svelte-h":!0}),A(d)!=="svelte-v3v6f"&&(d.innerHTML=T),this.h()},h(){M(s,"id","gradient-images-from-open-props"),M(n,"id","open-props-is-no-longer-used"),g.a=h},m(e,a){o(e,s,a),o(e,i,a),o(e,n,a),o(e,l,a),o(e,r,a),o(e,x,a),o(e,y,a),o(e,E,a),o(e,f,a),o(e,F,a),g.m(B,e,a),o(e,h,a),o(e,d,a)},p:S,d(e){e&&(p(s),p(i),p(n),p(l),p(r),p(x),p(y),p(E),p(f),p(F),g.d(),p(h),p(d))}}}function W(u){let s,c;const i=[u[0],k];let n={$$slots:{default:[V]},$$scope:{ctx:u}};for(let t=0;t<i.length;t+=1)n=D(n,i[t]);return s=new U({props:n}),{c(){G(s.$$.fragment)},l(t){I(s.$$.fragment,t)},m(t,l){N(s,t,l),c=!0},p(t,[l]){const r=l&1?R(i,[l&1&&$(t[0]),l&0&&$(k)]):{};l&2&&(r.$$scope={dirty:l,ctx:t}),s.$set(r)},i(t){c||(z(s.$$.fragment,t),c=!0)},o(t){J(s.$$.fragment,t),c=!1},d(t){K(s,t)}}}const k={title:"Color Gradients and Noise Experiments (Dummy Post)",description:"Tesing the color gradient and noise settings from open-props.",date:"2024-6-26",categories:["sveltekit","svelte"],published:!0};function X(u,s,c){return u.$$set=i=>{c(0,s=D(D({},s),w(i)))},s=w(s),[s]}class te extends j{constructor(s){super(),q(this,s,X,W,P,{})}}export{te as default,k as metadata};
